/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        to_GamingLayer {
            bindings = <&to 3>;
            key-positions = <0 2>;
        };

        reset_layers {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        mo_settings {
            bindings = <&mo 4>;
            key-positions = <49 35>;
        };

        chord_ue {
            bindings = <&umlaut_ue>;
            key-positions = <20 31>;
        };

        chord_oe {
            bindings = <&umlaut_oe>;
            key-positions = <34 31>;
        };

        chord_ae {
            bindings = <&umlaut_ae>;
            key-positions = <25 28>;
        };

        chord_ss {
            bindings = <&umlaut_ss>;
            key-positions = <27 28>;
        };
    };

    macros {
        umlaut_Ae_big: umlaut_Ae_big {
            compatible = "zmk,behavior-macro";
            label = "Ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_Oe_big: umlaut_Oe_big {
            compatible = "zmk,behavior-macro";
            label = "Oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_Ue_big: umlaut_Ue_big {
            compatible = "zmk,behavior-macro";
            label = "Ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_ae: umlaut_ae {
            compatible = "zmk,behavior-macro";
            label = "ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_oe: umlaut_oe {
            compatible = "zmk,behavior-macro";
            label = "oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_ue: umlaut_ue {
            compatible = "zmk,behavior-macro";
            label = "ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
        umlaut_ss: umlaut_ss {
            compatible = "zmk,behavior-macro";
            label = "ss";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
            &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp N4           &kp N5                                 &kp N6          &kp N7     &kp N8     &kp N9    &kp N0                 &kp DEL
              &kp TAB         &kp Q         &kp W         &kp F           &kp P            &kp B                                  &kp J           &kp L      &kp U      &kp Y  &kp SEMI                &kp BSPC
 &mt LEFT_CONTROL ESC         &kp A         &kp R         &kp S           &kp T            &kp G                                  &kp M           &kp N      &kp E      &kp I     &kp O  &mt RCTRL SINGLE_QUOTE
                &mo 5         &kp Z         &kp X         &kp C           &kp D            &kp V  &kp C_PP  &kp C_MUTE            &kp K           &kp H  &kp COMMA    &kp DOT  &kp FSLH     &kp LC(PAUSE_BREAK)
                                     &kp LEFT_WIN      &kp LALT  &mt LGUI MINUS  &mt LSHFT SPACE     &mo 1       &to 1  &mt RSHFT ENTER  &mt RGUI EQUAL   &kp RALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            bindings = <
 &trans    &kp F1    &kp F2    &kp F3     &kp F4     &kp F5                     &kp F6         &kp F7       &kp F8     &kp F9   &kp F10    &kp F11
 &trans  &kp LBKT  &kp RBKT  &kp LPAR   &kp RPAR  &kp CARET                   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END   &kp INS    &kp F12
 &trans  &kp EXCL    &kp AT  &kp HASH   &kp DLLR  &kp PRCNT                   &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT  &kp BSLH  &sk RCTRL
 &trans    &trans    &trans    &trans  &kp ASTRK     &trans  &trans  &trans   &kp AMPS       &kp LBRC     &kp RBRC   &kp PIPE    &trans     &trans
                     &trans    &trans     &trans  &sk LSHFT   &to 0   &to 2  &sk RSHFT         &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise {
            bindings = <
 &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6        &kp F7        &kp F8        &kp F9  &kp F10  &kp F11
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &trans  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &trans   &trans
                 &trans  &trans  &trans  &trans   &to 0  &trans  &trans  &kp NUMBER_0     &kp COMMA       &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        gaming {
            bindings = <
      &kp GRAVE  &kp N1  &kp N2        &kp N3     &kp N4     &kp N5                  &trans  &trans  &trans  &trans  &trans  &trans
        &kp TAB   &kp Q   &kp W         &kp E      &kp R      &kp T                  &trans  &trans  &trans  &trans  &trans  &trans
        &kp ESC   &kp A   &kp S         &kp D      &kp F      &kp G                  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LEFT_SHIFT   &kp Z   &kp X         &kp C      &kp V      &kp B  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &kp LEFT_ALT  &kp LCTRL  &kp SPACE  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        settings {
            bindings = <
 &out OUT_BLE     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
 &out OUT_USB       &bt BT_CLR  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI                  &trans  &trans  &trans  &trans  &trans  &trans
 &out OUT_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD                  &trans  &trans  &trans  &trans  &trans  &trans
       &trans           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans           &trans           &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        lower_shift {
            bindings = <
 &trans  &kp LS(F1)  &kp LS(F2)  &kp LS(F3)  &kp LS(F4)  &kp LS(F5)                    &kp LS(F6)     &kp LS(F7)     &kp LS(F8)     &kp LS(F9)  &kp LS(F10)  &kp LS(F11)
 &trans   &kp LS(Q)   &kp LS(W)   &kp LS(F)   &kp LS(P)   &kp LS(B)                  &kp LS(HOME)  &kp LS(PG_UP)  &kp LS(PG_DN)    &kp LS(END)       &trans  &kp LS(F12)
 &trans   &kp LS(A)   &kp LS(R)   &kp LS(S)   &kp LS(T)   &kp LS(G)                  &kp LS(LEFT)   &kp LS(DOWN)     &kp LS(UP)  &kp LS(RIGHT)       &trans       &trans
 &trans   &kp LS(Z)   &kp LS(X)   &kp LS(C)   &kp LS(D)   &kp LS(V)  &trans  &trans        &trans         &trans         &trans         &trans       &trans       &trans
                         &trans      &trans      &trans      &trans  &trans  &trans        &trans         &trans         &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };
    };
};
