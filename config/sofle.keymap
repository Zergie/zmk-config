/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

&lt {
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        mtt: mod_tap_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_THUMB";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        oe: oe {
            compatible = "zmk,behavior-mod-morph";
            label = "OE";
            #binding-cells = <0>;
            bindings = <&umlaut_oe>, <&umlaut_Oe_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ae: ae {
            compatible = "zmk,behavior-mod-morph";
            label = "AE";
            #binding-cells = <0>;
            bindings = <&umlaut_ae>, <&umlaut_Ae_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ue: ue {
            compatible = "zmk,behavior-mod-morph";
            label = "UE";
            #binding-cells = <0>;
            bindings = <&umlaut_ue>, <&umlaut_Ue_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        timeout-ms = <25>;

        toggle_numpad {
            bindings = <&kp KP_NUMLOCK>;
            key-positions = <0 1>;
        };

        mo_settings {
            bindings = <&mo 4>;
            key-positions = <50 51 52>;
        };

        toggle_qwerty {
            bindings = <&tog 4>;
            key-positions = <36 37>;
        };
    };

    macros {
        umlaut_Ae_big: umlaut_Ae_big {
            compatible = "zmk,behavior-macro";
            label = "Ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_Oe_big: umlaut_Oe_big {
            compatible = "zmk,behavior-macro";
            label = "Oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_Ue_big: umlaut_Ue_big {
            compatible = "zmk,behavior-macro";
            label = "Ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_ae: umlaut_ae {
            compatible = "zmk,behavior-macro";
            label = "ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_oe: umlaut_oe {
            compatible = "zmk,behavior-macro";
            label = "oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_ue: umlaut_ue {
            compatible = "zmk,behavior-macro";
            label = "ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        umlaut_ss: umlaut_ss {
            compatible = "zmk,behavior-macro";
            label = "ss";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };

        mon_1: mon_1 {
            compatible = "zmk,behavior-macro";
            label = "MON_1";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_wait_time 500>,
                <&kp LG(P)>,
                <&macro_wait_time 100>,
                <&kp TAB &kp HOME &kp ENTER &kp ESC>;

            wait-ms = <100>;
            tap-ms = <5>;
        };

        mon_2: mon_2 {
            compatible = "zmk,behavior-macro";
            label = "MON_2";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_wait_time 500>,
                <&kp LG(P)>,
                <&macro_wait_time 100>,
                <&kp TAB &kp HOME &kp DOWN_ARROW &kp ENTER &kp ESC>;

            wait-ms = <100>;
            tap-ms = <5>;
        };

        mon_3: mon_3 {
            compatible = "zmk,behavior-macro";
            label = "MON_3";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_wait_time 500>,
                <&kp LG(P)>,
                <&macro_wait_time 100>,
                <&kp TAB &kp END &kp UP_ARROW &kp ENTER &kp ESC>;

            wait-ms = <100>;
            tap-ms = <5>;
        };

        mon_4: mon_4 {
            compatible = "zmk,behavior-macro";
            label = "MON_4";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&macro_wait_time 500>,
                <&kp LG(P)>,
                <&macro_wait_time 100>,
                <&kp TAB &kp END &kp ENTER &kp ESC>;

            wait-ms = <100>;
            tap-ms = <5>;
        };

        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "ARROW";
            wait-ms = <5>;
            tap-ms = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp GRAVE  &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3          &kp N4               &kp N5                                                  &kp N6            &kp N7           &kp N8          &kp N9      &kp N0    &kp MINUS
&kp ESC    &kp Q           &kp W         &kp F                 &kp P                &kp B                                                   &kp J             &kp L            &kp U           &kp Y       &kp SEMI  &kp DEL
&mo 2      &mt LEFT_ALT A  &mt LCTRL R   &lt 1 S               &lt 2 T              &kp G                                                   &kp M             &mt LCTRL N      &mt LEFT_ALT E  &mt LWIN I  &kp O     &lt 3 SINGLE_QUOTE
&kp LCTRL  &kp Z           &kp X         &kp C                 &kp D                &kp V                  &kp C_PLAY_PAUSE  &kp C_MUTE     &kp K             &kp H            &kp COMMA       &kp DOT     &kp FSLH  &kp RCTRL
                           &kp LG(PLUS)  &kp LC(LG(LEFT_ALT))  &mtt LEFT_ALT MINUS  &mtt LEFT_SHIFT SPACE  &lt 1 TAB         &kp BACKSPACE  &mtt RSHFT ENTER  &mtt LALT EQUAL  &kp LEFT_GUI    &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LA(DOWN_ARROW) LA(UP_ARROW)>;
        };

        lower {
            bindings = <
&none   &kp LA(LC(LG(NUMBER_1)))  &kp LA(LC(LG(NUMBER_2)))  &kp LA(LC(LG(NUMBER_3)))  &kp LA(LC(LG(NUMBER_4)))  &kp C_PREVIOUS                               &kp C_NEXT     &none           &none         &none             &none             &none
&to 0   &none                     &none                     &kp SPACE                 &none                     &none                                        &none          &kp HOME        &none         &kp END           &kp LA(TAB)       &trans
&trans  &kp LALT                  &kp LCTRL                 &kp LC(PAGE_UP)           &kp LC(PAGE_DOWN)         &none                                        &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT         &kp LC(RIGHT)     &trans
&trans  &none                     &none                     &kp LA(LEFT)              &kp LA(RIGHT)             &kp LG(DOT)     &trans  &kp LC(PAUSE_BREAK)  &kp LG(SPACE)  &kp LG(T)       &kp F24       &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans
                                  &trans                    &trans                    &trans                    &trans          &trans  &trans               &trans         &trans          &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };

        raise {
            bindings = <
&none   &none    &kp LS(LC(F2))  &kp LC(F4)  &kp LA(F4)  &kp LA(F11)                  &none             &none              &none                 &none     &kp LS(EQUAL)  &kp EQUAL
&to 0   &kp F1   &kp F2          &kp F3      &kp F4      &kp F5                       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RPAR  &arrow         &trans
&trans  &kp F6   &kp F7          &kp F8      &kp F9      &kp F10                      &kp LEFT_BRACE    &kp PIPE           &kp BSLH              &oe       &kp F19        &trans
&trans  &kp F15  &kp F14         &kp F13     &kp F12     &kp F11      &trans  &trans  &kp RIGHT_BRACE   &umlaut_ss         &ue                   &ae       &kp F20        &trans
                 &trans          &trans      &trans      &trans       &trans  &trans  &trans            &trans             &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        settings {
            bindings = <
&out OUT_BLE  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                   &none  &none  &none  &none  &none  &none
&out OUT_USB  &bt BT_CLR       &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI                &none  &none  &none  &none  &none  &none
&out OUT_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD                &none  &none  &none  &none  &none  &none
&none         &mon_1           &mon_2           &mon_3           &mon_4           &none            &none  &none  &none  &none  &none  &none  &none  &none
                               &none            &none            &none            &none            &none  &none  &none  &none  &none  &none
            >;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans     &trans   &trans    &trans
&trans  &kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A   &kp S   &kp D   &kp F   &kp G                   &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans  &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };
    };
};
