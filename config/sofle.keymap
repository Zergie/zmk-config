/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "balanced";
};

/ {
    behaviors {
        oe: oe {
            compatible = "zmk,behavior-mod-morph";
            label = "OE";
            #binding-cells = <0>;
            bindings =
                <&umlaut_oe>,
                <&umlaut_Oe_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ae: ae {
            compatible = "zmk,behavior-mod-morph";
            label = "AE";
            #binding-cells = <0>;
            bindings =
                <&umlaut_ae>,
                <&umlaut_Ae_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ue: ue {
            compatible = "zmk,behavior-mod-morph";
            label = "UE";
            #binding-cells = <0>;
            bindings =
                <&umlaut_ue>,
                <&umlaut_Ue_big>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        timeout-ms = <25>;

        toggle_numpad {
            bindings = <&kp KP_NUMLOCK>;
            key-positions = <0 1>;
        };

        mo_settings {
            bindings = <&mo 3>;
            key-positions = <49 35>;
        };

        new_combo {
            bindings = <&tog 5>;
            key-positions = <50 59>;
        };
    };

    macros {
        umlaut_Ae_big: umlaut_Ae_big {
            compatible = "zmk,behavior-macro";
            label = "Ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_Oe_big: umlaut_Oe_big {
            compatible = "zmk,behavior-macro";
            label = "Oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_Ue_big: umlaut_Ue_big {
            compatible = "zmk,behavior-macro";
            label = "Ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_ae: umlaut_ae {
            compatible = "zmk,behavior-macro";
            label = "ae";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_oe: umlaut_oe {
            compatible = "zmk,behavior-macro";
            label = "oe";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_ue: umlaut_ue {
            compatible = "zmk,behavior-macro";
            label = "ue";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
        umlaut_ss: umlaut_ss {
            compatible = "zmk,behavior-macro";
            label = "ss";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LALT>;

            wait-ms = <5>;
            tap-ms = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2          &kp NUMBER_3              &kp N4                &kp N5                                       &kp N6          &kp N7        &kp N8   &kp N9    &kp N0         &kp MINUS
  &kp ESC         &kp Q         &kp W                 &kp F               &kp P                 &kp B                                        &kp J           &kp L         &kp U    &kp Y  &kp SEMI           &kp DEL
  &kp TAB         &kp A         &kp R                 &kp S               &kp T                 &kp G                                        &kp M           &kp N         &kp E    &kp I     &kp O  &kp SINGLE_QUOTE
&kp LCTRL         &kp Z         &kp X                 &kp C               &kp D                 &kp V   &kp C_PP       &kp C_MUTE            &kp K           &kp H     &kp COMMA  &kp DOT  &kp FSLH         &kp RCTRL
                               &tog 2  &kp LC(LG(LEFT_ALT))  &mt LEFT_ALT MINUS  &mt LEFT_SHIFT SPACE  &lt 1 TAB  &lt 2 BACKSPACE  &mt RSHFT ENTER  &mt LALT EQUAL  &kp LEFT_GUI   &tog 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            bindings = <
 &none            &none                &none                 &none                  &none  &kp C_VOLUME_DOWN                  &kp C_VOLUME_UP    &kp ESC   &kp ESC           &kp ESC  &kp LS(EQUAL)   &kp EQUAL
&trans  &kp LC(PAGE_UP)    &kp LC(PAGE_DOWN)      &kp LEFT_BRACKET      &kp RIGHT_BRACKET         &kp DOLLAR                          &kp INS   &kp HOME    &kp UP           &kp END    &kp LA(TAB)  &kp C_NEXT
&trans         &kp EXCL               &kp AT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp LEFT_BRACE                  &kp RIGHT_BRACE   &kp LEFT  &kp DOWN         &kp RIGHT       &kp BSLH  &kp C_PREV
&trans            &none  &kp LC(PAUSE_BREAK)          &kp LA(LEFT)          &kp LA(RIGHT)           &kp PIPE  &trans  &trans    &kp LG(SPACE)  &kp LG(T)   &kp F24  &kp LG(NUMBER_2)          &none      &trans
                                      &trans                &trans                 &trans             &trans   &to 0  &trans           &trans     &trans    &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise {
            bindings = <
 &none    &none  &kp LS(LC(F2))         &kp LC(F4)           &kp LA(F4)    &none                      &none    &none       &none    &none    &none   &none
&trans   &kp F1          &kp F2             &kp F3               &kp F4   &kp F5                  &kp PG_UP  &kp F23  &umlaut_ss      &ue    &none  &trans
&trans   &kp F6          &kp F7  &mt LEFT_SHIFT F8  &mt LEFT_CONTROL F9  &kp F10                  &kp PG_DN  &kp F21     &kp F22      &oe      &ae  &trans
&trans  &kp F15         &kp F14            &kp F13              &kp F12  &kp F11  &trans  &trans    &kp F16  &kp F17     &kp F18  &kp F19  &kp F20  &trans
                         &trans             &trans               &trans   &trans   &to 0  &trans     &trans   &trans      &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        settings {
            bindings = <
&out OUT_BLE     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                &none  &none  &none  &none  &none  &none
&out OUT_USB       &bt BT_CLR  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI                &none  &none  &none  &none  &none  &none
&out OUT_TOG  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD                &none  &none  &none  &none  &none  &none
       &none            &none            &none            &none            &none            &none  &none  &none  &none  &none  &none  &none  &none  &none
                                         &none            &none            &none            &none  &none  &none  &none  &none  &none  &none
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &kp HOME    &kp UP    &kp END
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans     &trans   &trans    &trans  &trans
&trans   &kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y   &kp U      &kp I    &kp O     &kp P  &trans
&trans   &kp A   &kp S   &kp D   &kp F   &kp G                   &kp H   &kp J      &kp K    &kp L  &kp SEMI  &trans
&trans   &kp Z   &kp X   &kp C   &kp V   &kp B  &trans  &trans   &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans
            >;
        };
    };
};
